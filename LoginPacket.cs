// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/LoginPacket.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CsharpProtobuf {

  /// <summary>Holder for reflection information generated from protos/LoginPacket.proto</summary>
  public static partial class LoginPacketReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/LoginPacket.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoginPacketReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhwcm90b3MvTG9naW5QYWNrZXQucHJvdG8SDkNzaGFycFByb3RvYnVmIn0K",
            "C0xvZ2luUGFja2V0EgwKBGNvZGUYASABKAUSDAoEc2l6ZRgCIAEoBRIWCg5z",
            "aXplT2ZVc2VybmFtZRgDIAEoBRIQCgh1c2VybmFtZRgEIAEoCRIWCg5zaXpl",
            "T2ZQYXNzd29yZBgFIAEoBRIQCghwYXNzd29yZBgGIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CsharpProtobuf.LoginPacket), global::CsharpProtobuf.LoginPacket.Parser, new[]{ "Code", "Size", "SizeOfUsername", "Username", "SizeOfPassword", "Password" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LoginPacket : pb::IMessage<LoginPacket> {
    private static readonly pb::MessageParser<LoginPacket> _parser = new pb::MessageParser<LoginPacket>(() => new LoginPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CsharpProtobuf.LoginPacketReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPacket(LoginPacket other) : this() {
      code_ = other.code_;
      size_ = other.size_;
      sizeOfUsername_ = other.sizeOfUsername_;
      username_ = other.username_;
      sizeOfPassword_ = other.sizeOfPassword_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPacket Clone() {
      return new LoginPacket(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private int size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "sizeOfUsername" field.</summary>
    public const int SizeOfUsernameFieldNumber = 3;
    private int sizeOfUsername_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SizeOfUsername {
      get { return sizeOfUsername_; }
      set {
        sizeOfUsername_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sizeOfPassword" field.</summary>
    public const int SizeOfPasswordFieldNumber = 5;
    private int sizeOfPassword_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SizeOfPassword {
      get { return sizeOfPassword_; }
      set {
        sizeOfPassword_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Size != other.Size) return false;
      if (SizeOfUsername != other.SizeOfUsername) return false;
      if (Username != other.Username) return false;
      if (SizeOfPassword != other.SizeOfPassword) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (SizeOfUsername != 0) hash ^= SizeOfUsername.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (SizeOfPassword != 0) hash ^= SizeOfPassword.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Size != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Size);
      }
      if (SizeOfUsername != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SizeOfUsername);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (SizeOfPassword != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SizeOfPassword);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      if (SizeOfUsername != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeOfUsername);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (SizeOfPassword != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeOfPassword);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPacket other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.SizeOfUsername != 0) {
        SizeOfUsername = other.SizeOfUsername;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.SizeOfPassword != 0) {
        SizeOfPassword = other.SizeOfPassword;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Size = input.ReadInt32();
            break;
          }
          case 24: {
            SizeOfUsername = input.ReadInt32();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 40: {
            SizeOfPassword = input.ReadInt32();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
